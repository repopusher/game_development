local SUBTRACT_DAMAGE_RESPONSE = hash("subtract_damage")
local GAME_OVER_RESPONSE = hash("game_over")

function init(self)
	self.health = 3
	self.health_node = gui.get_node("health")
	self.game_over_node = gui.get_node("game_over")	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end


function on_message(self, message_id, message, sender)
	if message_id == SUBTRACT_DAMAGE_RESPONSE then
		self.health = self.health - message.amount
		gui.set_text(self.health_node, tostring(self.health))
		msg.post("enemy_factory#enemy_factory1", "health_update", {amount = self.health})
	elseif message_id == GAME_OVER_RESPONSE then
		-- gui.set_visible(game_over_node, true)
		gui.set_color(self.game_over_node, vmath.vector4(1,1,1,1))
		gui.animate(self.game_over_node, "color.w", 0, gui.EASING_LINEAR, 5)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
